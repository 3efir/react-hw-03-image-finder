{"version":3,"sources":["config/config.js","config/secretKeys.js","api/imageFinder.js","components/Searchbar/SearchForm/index.jsx","components/Searchbar/index.jsx","components/ImageGallery/ImageGalleryItem/index.jsx","components/ImageGallery/index.jsx","components/Modal/index.jsx","components/LoadMoreButton/index.jsx","components/LoaderComponent/index.jsx","App.js","index.js"],"names":["config","apiKey","apiLink","perPage","getImages","searchString","page","axios","get","params","q","key","image_type","orientation","per_page","then","response","data","SearchForm","state","searchText","handleSearchFormSubmit","evt","preventDefault","props","onSearchFormSubmit","handleInputChange","setState","target","value","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Searchbar","ImageGalleryItem","handleImageClick","onSelectImage","id","src","webformatURL","alt","onClick","ImageGallery","images","map","item","tags","Modal","handleCloseModal","e","console","log","code","onClose","window","addEventListener","removeEventListener","children","LoadMoreButton","onLoadMore","LoaderComponent","color","height","width","timeout","App","totalPages","showModal","selectedImage","currentPage","isLoading","a","hits","Math","ceil","totalHits","handleSelectImage","find","image","handleLoadMore","loadMoreSection","length","document","documentElement","scrollHeight","prevProps","prevState","snapshot","scrollTo","top","behavior","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f6dc577.chunk.js","sourcesContent":["import { secretKeys } from './secretKeys';\n\nexport const config = {\n  apiKey: secretKeys.apiKey,\n  apiLink: 'https://pixabay.com/api/',\n  perPage: 12,\n};","export const secretKeys = {\n  apiKey: '18407049-d2d256100581463c50b4ee46b',\n};","import axios from 'axios';\nimport { config } from '../config/config';\n\nexport const getImages = (searchString, page) => axios.get(config.apiLink, {\n  params: {\n    q: searchString,\n    page: page,\n    key: config.apiKey,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: config.perPage,\n  }\n}).then((response) => response.data);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass SearchForm extends Component {\n  state = {\n    searchText: '',\n  }\n\n  handleSearchFormSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.onSearchFormSubmit(this.state.searchText)\n  }\n\n  handleInputChange = (evt) => {\n    this.setState({\n      searchText: evt.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"SearchForm\" onSubmit={this.handleSearchFormSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={this.state.searchText}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    )\n  }\n}\n\nSearchForm.propTypes = {\n  onSearchFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport SearchForm from './SearchForm';\n\nconst Searchbar = ({ onSearchFormSubmit }) => (\n  <header className=\"Searchbar\">\n    <SearchForm\n      onSearchFormSubmit={onSearchFormSubmit}\n    />\n  </header>\n);\n\nSearchbar.propTypes = {\n  onSearchFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass ImageGalleryItem extends Component {\n  handleImageClick = () => {\n    this.props.onSelectImage(this.props.id);\n  }\n\n  render() {\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          src={this.props.webformatURL}\n          alt={this.props.alt}\n          className=\"ImageGalleryItem-image\"\n          onClick={this.handleImageClick}\n        />\n      </li>\n    )\n  }\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string,\n  id: PropTypes.number,\n  onSelectImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nconst ImageGallery = ({ images, onSelectImage }) => (\n  <ul className=\"ImageGallery\">\n    {images.map((item) => (\n      <ImageGalleryItem\n        key={item.id}\n        webformatURL={item.webformatURL}\n        alt={item.tags}\n        id={item.id}\n        onSelectImage={onSelectImage}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onSelectImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass Modal extends Component {\n  handleCloseModal = (e) => {\n    console.log(e.code);\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleCloseModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleCloseModal);\n  }\n\n  render() {\n    return <div className=\"Overlay\" onClick={this.props.onClose}>\n      <div className=\"Modal\">\n        {this.props.children}\n      </div>\n    </div>;\n  }\n}\n\nModal.propTypes = {\n  children: PropTypes.element,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport './styles.scss';\nimport PropTypes from 'prop-types';\n\nconst LoadMoreButton = ({ onLoadMore }) => (\n  <div className=\"Button-wrapper\">\n    <button className=\"Button\" onClick={onLoadMore}>Load More</button>\n  </div>\n);\n\nLoadMoreButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default LoadMoreButton;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport './styles.scss';\n\nconst LoaderComponent = () => (\n  <div className=\"loader-wrapper\">\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={0}\n    />\n  </div>\n);\n\nexport default LoaderComponent;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { getImages } from './api/imageFinder';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport LoadMoreButton from './components/LoadMoreButton';\nimport { config } from './config/config';\nimport LoaderComponent from './components/LoaderComponent';\n\nclass App extends Component {\n  state = {\n    searchText: '',\n    images: [],\n    totalPages: 0,\n    showModal: false,\n    selectedImage: {},\n    currentPage: 1,\n    isLoading: false,\n  }\n\n  handleSearchFormSubmit = async(searchText) => {\n    let images = [];\n\n    this.setState({ isLoading: true });\n\n    if (searchText) {\n      images = await getImages(searchText, this.state.currentPage);\n    }\n\n    this.setState({\n      searchText,\n      images: [...images.hits],\n      totalPages: Math.ceil(images.totalHits / config.perPage),\n      currentPage: 1,\n      isLoading: false,\n    });\n  }\n\n  handleSelectImage = (id) => {\n    const selectedImage = this.state.images.find((image) => image.id === id);\n\n    this.setState({\n      showModal: true,\n      selectedImage,\n    });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      showModal: false,\n      selectedImage: {},\n    });\n  }\n\n  handleLoadMore = async() => {\n    this.setState({ isLoading: true });\n\n    const images = await getImages(this.state.searchText, this.state.currentPage + 1);\n\n    this.setState((state) => {\n      return {\n        images: [...state.images, ...images.hits],\n        currentPage: state.currentPage + 1,\n        isLoading: false,\n      }\n    });\n  }\n\n  loadMoreSection = () => {\n    if (this.state.isLoading) {\n      return <LoaderComponent />;\n    } else if (this.state.images.length > 0 && this.state.totalPages > this.state.currentPage) {\n      return <LoadMoreButton onLoadMore={this.handleLoadMore} />;\n    }\n  }\n\n  getSnapshotBeforeUpdate() {\n    return document.documentElement.scrollHeight;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.images.length > 0) {\n      window.scrollTo({\n        top: snapshot,\n        behavior: 'instant',\n      });\n\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar\n          onSearchFormSubmit={this.handleSearchFormSubmit}\n        />\n\n        <ImageGallery\n          images={this.state.images}\n          onSelectImage={this.handleSelectImage}\n        />\n\n        { this.loadMoreSection() }\n\n        {this.state.showModal && (\n          <Modal onClose={this.handleCloseModal}>\n            <img src={this.state.selectedImage.largeImageURL} alt={this.state.selectedImage.tags} />\n          </Modal>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}